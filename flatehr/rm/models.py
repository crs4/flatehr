# generated by datamodel-codegen:
#   filename:  <stdin>
#   timestamp: 2022-06-20T14:16:21+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, Dict, List, Optional

from flatehr.rm import RMObject
from pydantic import Extra, Field


class Model(RMObject):
    pass


class VersionStatus(RMObject):
    _type: Optional[str] = None


class Type(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Description(RMObject):
    _type: Optional[Type] = None


class Type1(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Committer(RMObject):
    _type: Type1


class TerminologyId(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    _type: Optional[str] = None


class Type2(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class EhrAccess(RMObject):
    _type: Optional[Type2] = None


class Type3(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class EhrStatus(RMObject):
    _type: Optional[Type3] = None


class Type4(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class Directory(RMObject):
    _type: Optional[Type4] = None


class Type5(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class Folder(RMObject):
    _type: Optional[Type5] = None


class Type6(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class Composition(RMObject):
    _type: Optional[Type6] = None


class Type7(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class Contribution(RMObject):
    _type: Optional[Type7] = None


class Type8(Enum):
    ATTESTATION = 'ATTESTATION'
    AUDIT_DETAILS = 'AUDIT_DETAILS'


class Audit(RMObject):
    _type: Optional[Type8] = None


class ArchetypeHrid(RMObject):
    class Config:
        extra = Extra.forbid

    namespace: str
    rm_publisher: str
    rm_package: str
    rm_class: str
    concept_id: str
    release_version: str
    version_status: VersionStatus
    build_count: str
    _type: Optional[str] = None


class Type9(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid(RMObject):
    _type: Type9


class Type10(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name(RMObject):
    _type: Optional[Type10] = None


class Type11(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Details(RMObject):
    _type: Type11


class Type12(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Function(RMObject):
    _type: Optional[Type12] = None


class Type13(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid1(RMObject):
    _type: Type13


class Type14(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name1(RMObject):
    _type: Optional[Type14] = None


class Type15(Enum):
    CLUSTER = 'CLUSTER'
    ELEMENT = 'ELEMENT'


class Item(RMObject):
    _type: Type15


class IsoOid(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    _type: Optional[str] = None


class Type16(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid2(RMObject):
    _type: Type16


class Type17(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name2(RMObject):
    _type: Optional[Type17] = None


class Type18(Enum):
    EXTRACT_FOLDER = 'EXTRACT_FOLDER'
    GENERIC_CONTENT_ITEM = 'GENERIC_CONTENT_ITEM'
    OPENEHR_CONTENT_ITEM = 'OPENEHR_CONTENT_ITEM'


class Item1(RMObject):
    _type: Type18


class Type19(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid3(RMObject):
    _type: Type19


class Type20(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name3(RMObject):
    _type: Optional[Type20] = None


class Type21(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Subject(RMObject):
    _type: Type21


class Type22(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Provider(RMObject):
    _type: Type22


class Type23(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class WorkflowId(RMObject):
    _type: Optional[Type23] = None


class Type24(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Protocol(RMObject):
    _type: Type24


class Type25(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class GuidelineId(RMObject):
    _type: Optional[Type25] = None


class Type26(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Narrative(RMObject):
    _type: Optional[Type26] = None


class Type27(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid4(RMObject):
    _type: Type27


class Type28(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name4(RMObject):
    _type: Optional[Type28] = None


class Type29(Enum):
    EXTRACT_FOLDER = 'EXTRACT_FOLDER'
    GENERIC_CONTENT_ITEM = 'GENERIC_CONTENT_ITEM'
    OPENEHR_CONTENT_ITEM = 'OPENEHR_CONTENT_ITEM'


class Item2(RMObject):
    _type: Type29


class Type30(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid5(RMObject):
    _type: Type30


class Type31(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name5(RMObject):
    _type: Optional[Type31] = None


class Type32(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Details1(RMObject):
    _type: Type32


class Type33(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Language(RMObject):
    _type: Optional[Type33] = None


class GenericId(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    scheme: str
    _type: Optional[str] = None


class Type34(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid6(RMObject):
    _type: Type34


class Type35(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name6(RMObject):
    _type: Optional[Type35] = None


class Type36(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Subject1(RMObject):
    _type: Type36


class Type37(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Provider1(RMObject):
    _type: Type37


class Type38(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class WorkflowId1(RMObject):
    _type: Optional[Type38] = None


class Type39(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Protocol1(RMObject):
    _type: Type39


class Type40(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class GuidelineId1(RMObject):
    _type: Optional[Type40] = None


class Type41(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Data(RMObject):
    _type: Type41


class Type42(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid7(RMObject):
    _type: Type42


class Type43(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name7(RMObject):
    _type: Optional[Type43] = None


class Type44(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Credentials(RMObject):
    _type: Type44


class Iso8601Type(RMObject):
    class Config:
        extra = Extra.forbid

    value: Optional[str] = None
    _type: Optional[str] = None


class Type45(Enum):
    ATTESTATION = 'ATTESTATION'
    AUDIT_DETAILS = 'AUDIT_DETAILS'


class Audit1(RMObject):
    _type: Optional[Type45] = None


class Type46(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class Version(RMObject):
    _type: Optional[Type46] = None


class Type47(Enum):
    PARTY_RELATED = 'PARTY_RELATED'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'


class Location(RMObject):
    _type: Optional[Type47] = None


class Type48(Enum):
    PARTY_RELATED = 'PARTY_RELATED'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'


class Provider2(RMObject):
    _type: Optional[Type48] = None


class Type49(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Subject2(RMObject):
    _type: Type49


class Type50(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class OtherDetails(RMObject):
    _type: Type50


class Type51(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class Contribution2(RMObject):
    _type: Optional[Type51] = None


class Type52(Enum):
    ATTESTATION = 'ATTESTATION'
    AUDIT_DETAILS = 'AUDIT_DETAILS'


class CommitAudit(RMObject):
    _type: Optional[Type52] = None


class Type53(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid8(RMObject):
    _type: Type53


class Type54(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name8(RMObject):
    _type: Optional[Type54] = None


class Type55(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class State(RMObject):
    _type: Type55


class Type56(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Data1(RMObject):
    _type: Type56


class CodePhrase(RMObject):
    class Config:
        extra = Extra.forbid

    terminology_id: TerminologyId
    code_string: str
    preferred_term: Optional[str] = None
    _type: Optional[str] = None


class Type57(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class WfDetails(RMObject):
    _type: Type57


class Type58(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class OwnerId(RMObject):
    _type: Optional[Type58] = None


class Type59(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name9(RMObject):
    _type: Optional[Type59] = None


class Type60(Enum):
    DV_PARSABLE = 'DV_PARSABLE'
    DV_MULTIMEDIA = 'DV_MULTIMEDIA'


class OriginalContent(RMObject):
    _type: Type60


class Type61(Enum):
    PARTY_RELATED = 'PARTY_RELATED'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'


class HealthCareFacility(RMObject):
    _type: Optional[Type61] = None


class Type62(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class OtherContext(RMObject):
    _type: Type62


class Type63(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid9(RMObject):
    _type: Type63


class Type64(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name10(RMObject):
    _type: Optional[Type64] = None


class Set(RMObject):
    _type: Optional[str] = None


class Type65(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class OwnerId1(RMObject):
    _type: Optional[Type65] = None


class Type66(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class OwnerId2(RMObject):
    _type: Optional[Type66] = None


class Uri(RMObject):
    _type: Optional[str] = None


class Type67(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid10(RMObject):
    _type: Type67


class Type68(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name11(RMObject):
    _type: Optional[Type68] = None


class TerminologyCode(RMObject):
    class Config:
        extra = Extra.forbid

    terminology_id: str
    terminology_version: Optional[str] = None
    code_string: str
    uri: Uri
    _type: Optional[str] = None


class Type69(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid11(RMObject):
    _type: Type69


class Type70(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name12(RMObject):
    _type: Optional[Type70] = None


class Type71(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Details2(RMObject):
    _type: Type71


class Type72(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid12(RMObject):
    _type: Type72


class Type73(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name13(RMObject):
    _type: Optional[Type73] = None


class Type74(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Details3(RMObject):
    _type: Type74


class Type75(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Language1(RMObject):
    _type: Optional[Type75] = None


class InternetId(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    _type: Optional[str] = None


class Type76(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Author(RMObject):
    _type: Type76


class Type77(Enum):
    ATTESTATION = 'ATTESTATION'
    AUDIT_DETAILS = 'AUDIT_DETAILS'


class Audit2(RMObject):
    _type: Optional[Type77] = None


class Type78(Enum):
    SYNC_EXTRACT = 'SYNC_EXTRACT'
    SYNC_EXTRACT_REQUEST = 'SYNC_EXTRACT_REQUEST'


class Content(RMObject):
    _type: Type78


class Message(RMObject):
    class Config:
        extra = Extra.forbid

    author: Author
    audit: Audit2
    content: Content
    signature: Optional[str] = None
    _type: Optional[str] = None


class Type79(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid13(RMObject):
    _type: Type79


class Type80(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name14(RMObject):
    _type: Optional[Type80] = None


class Type81(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Details4(RMObject):
    _type: Type81


class Type82(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Language2(RMObject):
    _type: Optional[Type82] = None


class Type83(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class ItemListItem(RMObject):
    _type: Optional[Type83] = None


class ExtractEntityManifest(RMObject):
    class Config:
        extra = Extra.forbid

    extract_id_key: str
    ehr_id: Optional[str] = None
    subject_id: Optional[str] = None
    other_ids: Optional[List[str]] = None
    item_list: Optional[List[ItemListItem]] = None
    _type: Optional[str] = None


class Interval(RMObject):
    class Config:
        extra = Extra.forbid

    lower: Optional[Dict[str, Any]] = None
    upper: Optional[Dict[str, Any]] = None
    lower_unbounded: bool
    upper_unbounded: bool
    lower_included: bool
    upper_included: bool
    _type: Optional[str] = None


class Type84(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name15(RMObject):
    _type: Optional[Type84] = None


class Type85(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class RequestId(RMObject):
    _type: Optional[Type85] = None


class Type86(Enum):
    DV_EHR_URI = 'DV_EHR_URI'
    DV_URI = 'DV_URI'


class Uri1(RMObject):
    _type: Optional[Type86] = None


class DVMultimedia(RMObject):
    class Config:
        extra = Extra.forbid

    charset: Optional[CodePhrase] = None
    language: Optional[CodePhrase] = None
    alternate_text: Optional[str] = None
    uri: Optional[Uri1] = None
    data: Optional[str] = None
    media_type: CodePhrase
    compression_algorithm: Optional[CodePhrase] = None
    integrity_check: Optional[str] = None
    integrity_check_algorithm: Optional[CodePhrase] = None
    thumbnail: Optional[DVMultimedia] = None
    size: int
    _type: Optional[str] = None


class Type87(Enum):
    ATTESTATION = 'ATTESTATION'
    AUDIT_DETAILS = 'AUDIT_DETAILS'


class Audit3(RMObject):
    _type: Optional[Type87] = None


class Version1(RMObject):
    pass


class Type88(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class OwnerId3(RMObject):
    _type: Optional[Type88] = None


class VersionTreeId(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    _type: Optional[str] = None


class Type89(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Item3(RMObject):
    _type: Optional[Type89] = None


class DVParagraph(RMObject):
    class Config:
        extra = Extra.forbid

    items: List[Item3] = Field(..., minItems=1)
    _type: Optional[str] = None


class Type90(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Meaning(RMObject):
    _type: Optional[Type90] = None


class Type91(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid14(RMObject):
    _type: Type91


class Type92(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name16(RMObject):
    _type: Optional[Type92] = None


class Type93(Enum):
    CLUSTER = 'CLUSTER'
    ELEMENT = 'ELEMENT'


class Item4(RMObject):
    _type: Type93


class Type94(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid15(RMObject):
    _type: Type94


class Type95(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name17(RMObject):
    _type: Optional[Type95] = None


class Value(RMObject):
    pass


class Type96(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class NullReason(RMObject):
    _type: Optional[Type96] = None


class Type97(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class OtherDetails1(RMObject):
    _type: Type97


class Type98(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid16(RMObject):
    _type: Type98


class Type99(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name18(RMObject):
    _type: Optional[Type99] = None


class Duration(RMObject):
    class Config:
        extra = Extra.forbid

    value: Optional[str] = None
    _type: Optional[str] = None


class Type100(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid17(RMObject):
    _type: Type100


class Type101(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name19(RMObject):
    _type: Optional[Type101] = None


class Type102(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Summary(RMObject):
    _type: Type102


class Event(RMObject):
    pass


class Type103(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid18(RMObject):
    _type: Type103


class Type104(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name20(RMObject):
    _type: Optional[Type104] = None


class Type105(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid19(RMObject):
    _type: Type105


class Type106(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name21(RMObject):
    _type: Optional[Type106] = None


class ResourceDescriptionItem(RMObject):
    class Config:
        extra = Extra.forbid

    language: TerminologyCode
    purpose: str
    keywords: Optional[List[str]] = None
    use: Optional[str] = None
    misuse: Optional[str] = None
    copyright: Optional[str] = None
    original_resource_uri: Optional[List[Dict[str, Any]]] = None
    other_details: Dict[str, Any]
    _type: Optional[str] = None


class Array(RMObject):
    _type: Optional[str] = None


class Type107(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid20(RMObject):
    _type: Type107


class Type108(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name22(RMObject):
    _type: Optional[Type108] = None


class Type109(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Subject3(RMObject):
    _type: Type109


class Type110(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Provider3(RMObject):
    _type: Type110


class Type111(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class WorkflowId2(RMObject):
    _type: Optional[Type111] = None


class Type112(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Protocol2(RMObject):
    _type: Type112


class Type113(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class GuidelineId2(RMObject):
    _type: Optional[Type113] = None


class Type114(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class OwnerId4(RMObject):
    _type: Optional[Type114] = None


class AddressedMessage(RMObject):
    class Config:
        extra = Extra.forbid

    sender: str
    sender_reference: str
    addressees: Optional[List[str]] = None
    urgency: Optional[int] = None
    message: Optional[Message] = None
    _type: Optional[str] = None


class Uuid(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    _type: Optional[str] = None


class Type115(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class ReasonItem(RMObject):
    _type: Optional[Type115] = None


class Type116(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class OwnerId5(RMObject):
    _type: Optional[Type116] = None


class Type117(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Function1(RMObject):
    _type: Optional[Type117] = None


class Type118(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Performer(RMObject):
    _type: Type118


class Type119(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid21(RMObject):
    _type: Type119


class Type120(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name23(RMObject):
    _type: Optional[Type120] = None


class Type121(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class Item5(RMObject):
    _type: Optional[Type121] = None


class Type122(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Details5(RMObject):
    _type: Type122


class Type123(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid22(RMObject):
    _type: Type123


class Type124(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name24(RMObject):
    _type: Optional[Type124] = None


class Type125(Enum):
    EXTRACT_ENTITY_CHAPTER = 'EXTRACT_ENTITY_CHAPTER'
    EXTRACT_CHAPTER = 'EXTRACT_CHAPTER'


class Chapter(RMObject):
    _type: Optional[Type125] = None


class ValidityKind(RMObject):
    _type: Optional[str] = None


class ObjectVersionId(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    _type: Optional[str] = None


class DVInterval(RMObject):
    class Config:
        extra = Extra.forbid

    lower: Optional[Dict[str, Any]] = None
    upper: Optional[Dict[str, Any]] = None
    lower_unbounded: bool
    upper_unbounded: bool
    lower_included: bool
    upper_included: bool
    _type: Optional[str] = None


class Type126(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid23(RMObject):
    _type: Type126


class Type127(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name25(RMObject):
    _type: Optional[Type127] = None


class Type128(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Details6(RMObject):
    _type: Type128


class Type129(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Language3(RMObject):
    _type: Optional[Type129] = None


class Type130(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class OwnerId6(RMObject):
    _type: Optional[Type130] = None


class Type131(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid24(RMObject):
    _type: Type131


class Type132(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name26(RMObject):
    _type: Optional[Type132] = None


class Item6(RMObject):
    pass


class Date(RMObject):
    class Config:
        extra = Extra.forbid

    value: Optional[str] = None
    _type: Optional[str] = None


class Type133(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid25(RMObject):
    _type: Type133


class Type134(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name27(RMObject):
    _type: Optional[Type134] = None


class Type135(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid26(RMObject):
    _type: Type135


class Type136(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name28(RMObject):
    _type: Optional[Type136] = None


class Type137(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class State1(RMObject):
    _type: Type137


class Type138(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Data2(RMObject):
    _type: Type138


class Type139(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Description1(RMObject):
    _type: Optional[Type139] = None


class Type140(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Committer1(RMObject):
    _type: Type140


class Type141(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Reason(RMObject):
    _type: Optional[Type141] = None


class Type142(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid27(RMObject):
    _type: Type142


class Type143(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name29(RMObject):
    _type: Optional[Type143] = None


class Type144(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Details7(RMObject):
    _type: Type144


class DVIdentifier(RMObject):
    class Config:
        extra = Extra.forbid

    issuer: Optional[str] = None
    id: str
    type: Optional[str] = None
    assigner: Optional[str] = None
    _type: Optional[str] = None


class Type145(Enum):
    DV_EHR_URI = 'DV_EHR_URI'
    DV_URI = 'DV_URI'


class Hyperlink(RMObject):
    _type: Optional[Type145] = None


class DateTime(RMObject):
    class Config:
        extra = Extra.forbid

    value: Optional[str] = None
    _type: Optional[str] = None


class Type146(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid28(RMObject):
    _type: Type146


class Type147(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name30(RMObject):
    _type: Optional[Type147] = None


class Type148(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Details8(RMObject):
    _type: Type148


class Type149(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Id(RMObject):
    _type: Type149


class LocatableRef(RMObject):
    class Config:
        extra = Extra.forbid

    id: Id
    namespace: str
    type: str
    path: Optional[str] = None
    _type: Optional[str] = None


class ListModel(RMObject):
    _type: Optional[str] = None


class Type150(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid29(RMObject):
    _type: Type150


class Type151(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name31(RMObject):
    _type: Optional[Type151] = None


class DVEhrUri(RMObject):
    class Config:
        extra = Extra.forbid

    value: Optional[str] = None
    _type: Optional[str] = None


class TerminologyTerm(RMObject):
    class Config:
        extra = Extra.forbid

    text: str
    concept: TerminologyCode
    _type: Optional[str] = None


class ArchetypeId(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    _type: Optional[str] = None


class Type152(Enum):
    TERMINOLOGY_ID = 'TERMINOLOGY_ID'
    GENERIC_ID = 'GENERIC_ID'
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'
    ARCHETYPE_ID = 'ARCHETYPE_ID'
    TEMPLATE_ID = 'TEMPLATE_ID'


class Id1(RMObject):
    _type: Type152


class PartyRef(RMObject):
    class Config:
        extra = Extra.forbid

    id: Id1
    namespace: str
    type: str
    _type: Optional[str] = None


class TemplateId(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    _type: Optional[str] = None


class Type153(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid30(RMObject):
    _type: Type153


class Type154(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name32(RMObject):
    _type: Optional[Type154] = None


class Type155(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Subject4(RMObject):
    _type: Type155


class Type156(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Provider4(RMObject):
    _type: Type156


class Type157(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class WorkflowId3(RMObject):
    _type: Optional[Type157] = None


class Type158(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Data3(RMObject):
    _type: Type158


class PartyIdentified(RMObject):
    class Config:
        extra = Extra.forbid

    external_ref: Optional[PartyRef] = None
    name: Optional[str] = None
    identifiers: Optional[List[DVIdentifier]] = Field(None, minItems=1)
    _type: Optional[str] = None


class Type159(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid31(RMObject):
    _type: Type159


class Type160(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name33(RMObject):
    _type: Optional[Type160] = None


class Item7(RMObject):
    pass


class Type161(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid32(RMObject):
    _type: Type161


class Type162(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name34(RMObject):
    _type: Optional[Type162] = None


class Type163(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Composer(RMObject):
    _type: Type163


class Type164(Enum):
    INSTRUCTION = 'INSTRUCTION'
    EVALUATION = 'EVALUATION'
    OBSERVATION = 'OBSERVATION'
    ACTION = 'ACTION'
    ADMIN_ENTRY = 'ADMIN_ENTRY'
    GENERIC_ENTRY = 'GENERIC_ENTRY'
    SECTION = 'SECTION'


class ContentItem(RMObject):
    _type: Type164


class Type165(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid33(RMObject):
    _type: Type165


class Type166(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name35(RMObject):
    _type: Optional[Type166] = None


class Type167(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class OtherDetails2(RMObject):
    _type: Type167


class Type168(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Meaning1(RMObject):
    _type: Optional[Type168] = None


class Type170(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Type169(RMObject):
    _type: Optional[Type170] = None


class Link(RMObject):
    class Config:
        extra = Extra.forbid

    meaning: Meaning1
    type: Type169
    target: DVEhrUri
    _type: Optional[str] = None


class TranslationDetails(RMObject):
    class Config:
        extra = Extra.forbid

    language: TerminologyCode
    author: Dict[str, Any]
    accreditation: Optional[str] = None
    other_details: Optional[Dict[str, Any]] = None
    _type: Optional[str] = None


class Type171(Enum):
    TERMINOLOGY_ID = 'TERMINOLOGY_ID'
    GENERIC_ID = 'GENERIC_ID'
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'
    ARCHETYPE_ID = 'ARCHETYPE_ID'
    TEMPLATE_ID = 'TEMPLATE_ID'


class Id2(RMObject):
    _type: Type171


class AccessGroupRef(RMObject):
    class Config:
        extra = Extra.forbid

    id: Id2
    namespace: str
    type: str
    _type: Optional[str] = None


class Type172(Enum):
    TERMINOLOGY_ID = 'TERMINOLOGY_ID'
    GENERIC_ID = 'GENERIC_ID'
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'
    ARCHETYPE_ID = 'ARCHETYPE_ID'
    TEMPLATE_ID = 'TEMPLATE_ID'


class Id3(RMObject):
    _type: Type172


class ObjectRef(RMObject):
    class Config:
        extra = Extra.forbid

    id: Id3
    namespace: str
    type: str
    _type: Optional[str] = None


class Type173(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid34(RMObject):
    _type: Type173


class Type174(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name36(RMObject):
    _type: Optional[Type174] = None


class Time(RMObject):
    class Config:
        extra = Extra.forbid

    value: Optional[str] = None
    _type: Optional[str] = None


class Type175(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class Contribution3(RMObject):
    _type: Optional[Type175] = None


class Type176(Enum):
    ATTESTATION = 'ATTESTATION'
    AUDIT_DETAILS = 'AUDIT_DETAILS'


class CommitAudit1(RMObject):
    _type: Optional[Type176] = None


class DVBoolean(RMObject):
    class Config:
        extra = Extra.forbid

    value: bool
    _type: Optional[str] = None


class DVUri(RMObject):
    class Config:
        extra = Extra.forbid

    value: Optional[str] = None
    _type: Optional[str] = None


class Type177(Enum):
    DV_EHR_URI = 'DV_EHR_URI'
    DV_URI = 'DV_URI'


class Hyperlink1(RMObject):
    _type: Optional[Type177] = None


class Type178(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid35(RMObject):
    _type: Type178


class Type179(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name37(RMObject):
    _type: Optional[Type179] = None


class Type180(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Subject5(RMObject):
    _type: Type180


class Type181(Enum):
    PARTY_SELF = 'PARTY_SELF'
    PARTY_IDENTIFIED = 'PARTY_IDENTIFIED'
    PARTY_RELATED = 'PARTY_RELATED'


class Provider5(RMObject):
    _type: Type181


class Type182(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class WorkflowId4(RMObject):
    _type: Optional[Type182] = None


class Type183(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Protocol3(RMObject):
    _type: Type183


class Type184(Enum):
    LOCATABLE_REF = 'LOCATABLE_REF'
    PARTY_REF = 'PARTY_REF'
    ACCESS_GROUP_REF = 'ACCESS_GROUP_REF'
    OBJECT_REF = 'OBJECT_REF'


class GuidelineId3(RMObject):
    _type: Optional[Type184] = None


class Type185(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Description2(RMObject):
    _type: Type185


class Type186(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid36(RMObject):
    _type: Type186


class Type187(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name38(RMObject):
    _type: Optional[Type187] = None


class Type188(Enum):
    EXTRACT_FOLDER = 'EXTRACT_FOLDER'
    GENERIC_CONTENT_ITEM = 'GENERIC_CONTENT_ITEM'
    OPENEHR_CONTENT_ITEM = 'OPENEHR_CONTENT_ITEM'


class Item8(RMObject):
    _type: Type188


class HierObjectId(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    _type: Optional[str] = None


class Type189(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid37(RMObject):
    _type: Type189


class Type190(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name39(RMObject):
    _type: Optional[Type190] = None


class Type191(Enum):
    INSTRUCTION = 'INSTRUCTION'
    EVALUATION = 'EVALUATION'
    OBSERVATION = 'OBSERVATION'
    ACTION = 'ACTION'
    ADMIN_ENTRY = 'ADMIN_ENTRY'
    GENERIC_ENTRY = 'GENERIC_ENTRY'
    SECTION = 'SECTION'


class Item9(RMObject):
    _type: Type191


class Type192(Enum):
    OBJECT_VERSION_ID = 'OBJECT_VERSION_ID'
    HIER_OBJECT_ID = 'HIER_OBJECT_ID'


class Uid38(RMObject):
    _type: Type192


class Type193(Enum):
    DV_CODED_TEXT = 'DV_CODED_TEXT'
    DV_TEXT = 'DV_TEXT'


class Name40(RMObject):
    _type: Optional[Type193] = None


class Type194(Enum):
    ITEM_SINGLE = 'ITEM_SINGLE'
    ITEM_TREE = 'ITEM_TREE'
    ITEM_LIST = 'ITEM_LIST'
    ITEM_TABLE = 'ITEM_TABLE'


class Description3(RMObject):
    _type: Type194


class ExtractManifest(RMObject):
    class Config:
        extra = Extra.forbid

    entities: Optional[List[ExtractEntityManifest]] = Field(None, minItems=1)
    _type: Optional[str] = None


class RevisionHistoryItem(RMObject):
    class Config:
        extra = Extra.forbid

    version_id: ObjectVersionId
    audits: List[Audit] = Field(..., minItems=1)
    _type: Optional[str] = None


class DVParsable(RMObject):
    class Config:
        extra = Extra.forbid

    charset: Optional[CodePhrase] = None
    language: Optional[CodePhrase] = None
    value: str
    formalism: str
    _type: Optional[str] = None


class ExtractVersionSpec(RMObject):
    class Config:
        extra = Extra.forbid

    include_all_versions: bool
    commit_time_interval: Optional[DVInterval] = None
    include_revision_history: bool
    include_data: bool
    _type: Optional[str] = None


class ResourceDescription(RMObject):
    class Config:
        extra = Extra.forbid

    original_author: Dict[str, Any]
    other_contributors: Optional[List[str]] = None
    lifecycle_state: str
    resource_package_uri: Optional[str] = None
    other_details: Optional[Dict[str, Any]] = None
    parent_resource: Dict[str, Any]
    details: List[ResourceDescriptionItem] = Field(..., minItems=1)
    _type: Optional[str] = None


class Contribution1(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    audit: Audit1
    versions: List[Version]
    _type: Optional[str] = None


class Archetyped(RMObject):
    class Config:
        extra = Extra.forbid

    archetype_id: ArchetypeId
    template_id: Optional[TemplateId] = None
    rm_version: str
    _type: Optional[str] = None


class InstructionDetails(RMObject):
    class Config:
        extra = Extra.forbid

    instruction_id: LocatableRef
    wf_details: Optional[WfDetails] = None
    activity_id: str
    _type: Optional[str] = None


class PartySelf(RMObject):
    class Config:
        extra = Extra.forbid

    external_ref: Optional[PartyRef] = None
    _type: Optional[str] = None


class XContribution(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    audit: Audit3
    versions: Optional[List[Version1]] = None
    _type: Optional[str] = None


class ReferenceRange(RMObject):
    class Config:
        extra = Extra.forbid

    range: DVInterval
    meaning: Meaning
    _type: Optional[str] = None


class DVGeneralTimeSpecification(RMObject):
    class Config:
        extra = Extra.forbid

    value: DVParsable
    _type: Optional[str] = None


class DVPeriodicTimeSpecification(RMObject):
    class Config:
        extra = Extra.forbid

    value: DVParsable
    _type: Optional[str] = None


class RevisionHistory(RMObject):
    class Config:
        extra = Extra.forbid

    items: List[RevisionHistoryItem]
    _type: Optional[str] = None


class DVCount(RMObject):
    class Config:
        extra = Extra.forbid

    normal_status: Optional[CodePhrase] = None
    normal_range: Optional[DVInterval] = None
    other_reference_ranges: Optional[List[ReferenceRange]] = None
    magnitude_status: Optional[str] = None
    accuracy: Optional[float] = None
    accuracy_is_percent: Optional[bool] = None
    magnitude: int
    _type: Optional[str] = None


class DVDuration(RMObject):
    class Config:
        extra = Extra.forbid

    normal_status: Optional[CodePhrase] = None
    normal_range: Optional[DVInterval] = None
    other_reference_ranges: Optional[List[ReferenceRange]] = Field(None, minItems=1)
    magnitude_status: Optional[str] = None
    accuracy: Optional[float] = None
    accuracy_is_percent: Optional[bool] = None
    value: str
    _type: Optional[str] = None


class DVProportion(RMObject):
    class Config:
        extra = Extra.forbid

    normal_status: Optional[CodePhrase] = None
    normal_range: Optional[DVInterval] = None
    other_reference_ranges: Optional[List[ReferenceRange]] = Field(None, minItems=1)
    magnitude_status: Optional[str] = None
    accuracy: Optional[float] = None
    accuracy_is_percent: Optional[bool] = None
    numerator: float
    denominator: float
    type: int
    precision: Optional[int] = None
    _type: Optional[str] = None


class DVQuantity(RMObject):
    class Config:
        extra = Extra.forbid

    normal_status: Optional[CodePhrase] = None
    normal_range: Optional[DVInterval] = None
    other_reference_ranges: Optional[List[ReferenceRange]] = None
    magnitude_status: Optional[str] = None
    accuracy: Optional[float] = None
    accuracy_is_percent: Optional[bool] = None
    magnitude: float
    property: Optional[CodePhrase] = None
    units: str
    units_system: Optional[str] = None
    units_display_name: Optional[str] = None
    precision: Optional[int] = None
    _type: Optional[str] = None


class DVDate(RMObject):
    class Config:
        extra = Extra.forbid

    normal_status: Optional[CodePhrase] = None
    normal_range: Optional[DVInterval] = None
    other_reference_ranges: Optional[List[ReferenceRange]] = Field(None, minItems=1)
    magnitude_status: Optional[str] = None
    accuracy: Optional[DVDuration] = None
    value: str
    _type: Optional[str] = None


class DVTime(RMObject):
    class Config:
        extra = Extra.forbid

    normal_status: Optional[CodePhrase] = None
    normal_range: Optional[DVInterval] = None
    other_reference_ranges: Optional[List[ReferenceRange]] = Field(None, minItems=1)
    magnitude_status: Optional[str] = None
    accuracy: Optional[DVDuration] = None
    value: str
    _type: Optional[str] = None


class DVDateTime(RMObject):
    class Config:
        extra = Extra.forbid

    normal_status: Optional[CodePhrase] = None
    normal_range: Optional[DVInterval] = None
    other_reference_ranges: Optional[List[ReferenceRange]] = Field(None, minItems=1)
    magnitude_status: Optional[str] = None
    accuracy: Optional[DVDuration] = None
    value: str
    _type: Optional[str] = None


class FeederAuditDetails(RMObject):
    class Config:
        extra = Extra.forbid

    system_id: str
    location: Optional[Location] = None
    provider: Optional[Provider2] = None
    subject: Optional[Subject2] = None
    time: Optional[DVDateTime] = None
    version_id: Optional[str] = None
    other_details: Optional[OtherDetails] = None
    _type: Optional[str] = None


class FeederAudit(RMObject):
    class Config:
        extra = Extra.forbid

    originating_system_item_ids: Optional[List[DVIdentifier]] = None
    feeder_system_item_ids: Optional[List[DVIdentifier]] = None
    original_content: Optional[OriginalContent] = None
    originating_system_audit: FeederAuditDetails
    feeder_system_audit: Optional[FeederAuditDetails] = None
    _type: Optional[str] = None


class ItemTree(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid14] = None
    archetype_node_id: str
    name: Name16
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    items: Optional[List[Item4]] = None
    _type: Optional[str] = None


class History(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid17] = None
    archetype_node_id: str
    name: Name19
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    origin: DVDateTime
    period: Optional[DVDuration] = None
    duration: Optional[DVDuration] = None
    summary: Optional[Summary] = None
    events: Optional[List[Event]] = Field(None, minItems=1)
    _type: Optional[str] = None


class Folder1(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid21] = None
    archetype_node_id: str
    name: Name23
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    folders: Optional[List[Folder1]] = None
    items: Optional[List[Item5]] = None
    details: Optional[Details5] = None
    _type: Optional[str] = None


class VersionedObject(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    owner_id: OwnerId6
    time_created: DVDateTime
    _type: Optional[str] = None


class Address(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid27] = None
    archetype_node_id: str
    name: Name29
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    details: Details7
    _type: Optional[str] = None


class PartyRelationship(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid28] = None
    archetype_node_id: str
    name: Name30
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    source: PartyRef
    target: PartyRef
    details: Optional[Details8] = None
    time_validity: Optional[DVInterval] = None
    _type: Optional[str] = None


class EhrAccess1(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid29] = None
    archetype_node_id: str
    name: Name31
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    settings: Optional[Dict[str, Any]] = None
    _type: Optional[str] = None


class OpenehrContentItem(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid31] = None
    archetype_node_id: str
    name: Name33
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    is_primary: bool
    is_changed: Optional[bool] = None
    is_masked: Optional[bool] = None
    item: Optional[Item7] = None
    _type: Optional[str] = None


class EhrStatus1(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid33] = None
    archetype_node_id: str
    name: Name35
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    subject: PartySelf
    is_queryable: bool
    is_modifiable: bool
    other_details: Optional[OtherDetails2] = None
    _type: Optional[str] = None


class GenericEntry(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid34] = None
    archetype_node_id: str
    name: Name36
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    data: ItemTree
    _type: Optional[str] = None


class ExtractEntityChapter(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid36] = None
    archetype_node_id: str
    name: Name38
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    items: Optional[List[Item8]] = None
    extract_id_key: str
    _type: Optional[str] = None


class Section(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid37] = None
    archetype_node_id: str
    name: Name39
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    items: Optional[List[Item9]] = Field(None, minItems=1)
    _type: Optional[str] = None


class Activity(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid38] = None
    archetype_node_id: str
    name: Name40
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    description: Description3
    timing: Optional[DVParsable] = None
    action_archetype_id: Optional[str] = None
    _type: Optional[str] = None


class SyncExtractSpec(RMObject):
    class Config:
        extra = Extra.forbid

    includes_versions: bool
    contribution_list: Optional[List[HierObjectId]] = None
    contributions_since: Optional[DVDateTime] = None
    all_contributions: Optional[bool] = None
    _type: Optional[str] = None


class Ehr(RMObject):
    class Config:
        extra = Extra.forbid

    system_id: HierObjectId
    ehr_id: HierObjectId
    time_created: DVDateTime
    ehr_access: EhrAccess
    ehr_status: EhrStatus
    directory: Optional[Directory] = None
    folders: Optional[List[Folder]] = None
    compositions: Optional[List[Composition]] = None
    contributions: List[Contribution]
    _type: Optional[str] = None


class PartyIdentity(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid] = None
    archetype_node_id: str
    name: Name
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    details: Details
    _type: Optional[str] = None


class Cluster(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid1] = None
    archetype_node_id: str
    name: Name1
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    items: List[Item] = Field(..., minItems=1)
    _type: Optional[str] = None


class ExtractFolder(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid2] = None
    archetype_node_id: str
    name: Name2
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    items: Optional[List[Item1]] = None
    _type: Optional[str] = None


class ExtractChapter(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid4] = None
    archetype_node_id: str
    name: Name4
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    items: Optional[List[Item2]] = None
    _type: Optional[str] = None


class Capability(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid7] = None
    archetype_node_id: str
    name: Name7
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    credentials: Credentials
    time_validity: Optional[DVInterval] = None
    _type: Optional[str] = None


class PointEvent(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid8] = None
    archetype_node_id: str
    name: Name8
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    time: DVDateTime
    state: Optional[State] = None
    data: Data1
    _type: Optional[str] = None


class SyncExtract(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid10] = None
    archetype_node_id: str
    name: Name11
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    specification: SyncExtractSpec
    items: Optional[List[XContribution]] = None
    _type: Optional[str] = None


class SyncExtractRequest(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid18] = None
    archetype_node_id: str
    name: Name20
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    specification: SyncExtractSpec
    _type: Optional[str] = None


class Contact(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid19] = None
    archetype_node_id: str
    name: Name21
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    time_validity: Optional[DVInterval] = None
    addresses: Optional[List[Address]] = Field(None, minItems=1)
    _type: Optional[str] = None


class Organisation(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Uid23
    archetype_node_id: str
    name: Name25
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    details: Optional[Details6] = None
    identities: List[PartyIdentity] = Field(..., minItems=1)
    contacts: Optional[List[Contact]] = Field(None, minItems=1)
    relationships: Optional[List[PartyRelationship]] = Field(None, minItems=1)
    reverse_relationships: Optional[List[LocatableRef]] = Field(None, minItems=1)
    roles: Optional[List[PartyRef]] = Field(None, minItems=1)
    languages: Optional[List[Language3]] = Field(None, minItems=1)
    _type: Optional[str] = None


class ItemTable(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid25] = None
    archetype_node_id: str
    name: Name27
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    rows: Optional[List[Cluster]] = None
    _type: Optional[str] = None


class Person(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Uid5
    archetype_node_id: str
    name: Name5
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    details: Optional[Details1] = None
    identities: List[PartyIdentity] = Field(..., minItems=1)
    contacts: Optional[List[Contact]] = Field(None, minItems=1)
    relationships: Optional[List[PartyRelationship]] = Field(None, minItems=1)
    reverse_relationships: Optional[List[LocatableRef]] = Field(None, minItems=1)
    roles: Optional[List[PartyRef]] = Field(None, minItems=1)
    languages: Optional[List[Language]] = Field(None, minItems=1)
    _type: Optional[str] = None


class Role(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Uid11
    archetype_node_id: str
    name: Name12
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    details: Optional[Details2] = None
    identities: List[PartyIdentity] = Field(..., minItems=1)
    contacts: Optional[List[Contact]] = Field(None, minItems=1)
    relationships: Optional[List[PartyRelationship]] = Field(None, minItems=1)
    reverse_relationships: Optional[List[LocatableRef]] = Field(None, minItems=1)
    performer: PartyRef
    capabilities: Optional[List[Capability]] = Field(None, minItems=1)
    time_validity: Optional[DVInterval] = None
    _type: Optional[str] = None


class Agent(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Uid12
    archetype_node_id: str
    name: Name13
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    details: Optional[Details3] = None
    identities: List[PartyIdentity] = Field(..., minItems=1)
    contacts: Optional[List[Contact]] = Field(None, minItems=1)
    relationships: Optional[List[PartyRelationship]] = Field(None, minItems=1)
    reverse_relationships: Optional[List[LocatableRef]] = Field(None, minItems=1)
    roles: Optional[List[PartyRef]] = Field(None, minItems=1)
    languages: Optional[List[Language1]] = Field(None, minItems=1)
    _type: Optional[str] = None


class Group(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Uid13
    archetype_node_id: str
    name: Name14
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    details: Optional[Details4] = None
    identities: List[PartyIdentity] = Field(..., minItems=1)
    contacts: Optional[List[Contact]] = Field(None, minItems=1)
    relationships: Optional[List[PartyRelationship]] = Field(None, minItems=1)
    reverse_relationships: Optional[List[LocatableRef]] = Field(None, minItems=1)
    roles: Optional[List[PartyRef]] = Field(None, minItems=1)
    languages: Optional[List[Language2]] = Field(None, minItems=1)
    _type: Optional[str] = None


class AuditDetails(RMObject):
    class Config:
        extra = Extra.forbid

    system_id: str
    time_committed: DVDateTime
    change_type: DVCodedText
    description: Optional[Description] = None
    committer: Committer
    _type: Optional[str] = None


class ExtractParticipation(RMObject):
    class Config:
        extra = Extra.forbid

    performer: str
    function: Function
    mode: Optional[DVCodedText] = None
    time: Optional[DVInterval] = None
    _type: Optional[str] = None


class PartyRelated(RMObject):
    class Config:
        extra = Extra.forbid

    external_ref: Optional[PartyRef] = None
    name: Optional[str] = None
    identifiers: Optional[List[DVIdentifier]] = Field(None, minItems=1)
    relationship: DVCodedText
    _type: Optional[str] = None


class Instruction(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid3] = None
    archetype_node_id: str
    name: Name3
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    language: CodePhrase
    encoding: CodePhrase
    subject: Subject
    provider: Optional[Provider] = None
    other_participations: Optional[List[Participation]] = None
    workflow_id: Optional[WorkflowId] = None
    protocol: Optional[Protocol] = None
    guideline_id: Optional[GuidelineId] = None
    narrative: Narrative
    expiry_time: Optional[DVDateTime] = None
    wf_definition: Optional[DVParsable] = None
    activities: Optional[List[Activity]] = Field(None, minItems=1)
    _type: Optional[str] = None


class Evaluation(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid6] = None
    archetype_node_id: str
    name: Name6
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    language: CodePhrase
    encoding: CodePhrase
    subject: Subject1
    provider: Optional[Provider1] = None
    other_participations: Optional[List[Participation]] = None
    workflow_id: Optional[WorkflowId1] = None
    protocol: Optional[Protocol1] = None
    guideline_id: Optional[GuidelineId1] = None
    data: Data
    _type: Optional[str] = None


class OriginalVersion(RMObject):
    class Config:
        extra = Extra.forbid

    contribution: Contribution2
    commit_audit: CommitAudit
    signature: Optional[str] = None
    uid: ObjectVersionId
    preceding_version_uid: Optional[ObjectVersionId] = None
    other_input_version_uids: Optional[List[ObjectVersionId]] = Field(None, minItems=1)
    attestations: Optional[List[Attestation]] = Field(None, minItems=1)
    lifecycle_state: DVCodedText
    data: Optional[Dict[str, Any]] = None
    _type: Optional[str] = None


class XVersionedParty(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    owner_id: OwnerId
    time_created: DVDateTime
    total_version_count: int
    extract_version_count: int
    revision_history: Optional[RevisionHistory] = None
    versions: Optional[List[OriginalVersion]] = None
    _type: Optional[str] = None


class ExtractRequest(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    archetype_node_id: str
    name: Name9
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    extract_spec: ExtractSpec
    update_spec: Optional[ExtractUpdateSpec] = None
    _type: Optional[str] = None


class EventContext(RMObject):
    class Config:
        extra = Extra.forbid

    health_care_facility: Optional[HealthCareFacility] = None
    start_time: DVDateTime
    end_time: Optional[DVDateTime] = None
    participations: Optional[List[Participation]] = Field(None, minItems=1)
    location: Optional[str] = None
    setting: DVCodedText
    other_context: Optional[OtherContext] = None
    _type: Optional[str] = None


class ItemSingle(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid9] = None
    archetype_node_id: str
    name: Name10
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    item: Element
    _type: Optional[str] = None


class XVersionedComposition(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    owner_id: OwnerId1
    time_created: DVDateTime
    total_version_count: int
    extract_version_count: int
    revision_history: Optional[RevisionHistory] = None
    versions: Optional[List[OriginalVersion]] = None
    _type: Optional[str] = None


class XVersionedFolder(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    owner_id: OwnerId2
    time_created: DVDateTime
    total_version_count: int
    extract_version_count: int
    revision_history: Optional[RevisionHistory] = None
    versions: Optional[List[OriginalVersion]] = None
    _type: Optional[str] = None


class DVOrdinal(RMObject):
    class Config:
        extra = Extra.forbid

    normal_status: Optional[CodePhrase] = None
    normal_range: Optional[DVInterval] = None
    other_reference_ranges: Optional[List[ReferenceRange]] = Field(None, minItems=1)
    value: int
    symbol: DVCodedText
    _type: Optional[str] = None


class ExtractActionRequest(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    archetype_node_id: str
    name: Name15
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    request_id: RequestId
    action: DVCodedText
    _type: Optional[str] = None


class XVersionedEhrAccess(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    owner_id: OwnerId3
    time_created: DVDateTime
    total_version_count: int
    extract_version_count: int
    revision_history: Optional[RevisionHistory] = None
    versions: Optional[List[OriginalVersion]] = None
    _type: Optional[str] = None


class Element(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid15] = None
    archetype_node_id: str
    name: Name17
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    null_flavour: Optional[DVCodedText] = None
    value: Optional[Value] = None
    null_reason: Optional[NullReason] = None
    _type: Optional[str] = None


class ExtractSpec(RMObject):
    class Config:
        extra = Extra.forbid

    extract_type: DVCodedText
    include_multimedia: bool
    priority: int
    link_depth: int
    criteria: Optional[List[DVParsable]] = None
    manifest: ExtractManifest
    version_spec: Optional[ExtractVersionSpec] = None
    other_details: Optional[OtherDetails1] = None
    _type: Optional[str] = None


class DVState(RMObject):
    class Config:
        extra = Extra.forbid

    value: DVCodedText
    is_terminal: bool
    _type: Optional[str] = None


class ItemList(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid16] = None
    archetype_node_id: str
    name: Name18
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    items: Optional[List[Element]] = None
    _type: Optional[str] = None


class TermMapping(RMObject):
    class Config:
        extra = Extra.forbid

    match: str
    purpose: Optional[DVCodedText] = None
    target: CodePhrase
    _type: Optional[str] = None


class ExtractUpdateSpec(RMObject):
    class Config:
        extra = Extra.forbid

    persist_in_server: bool
    trigger_events: Optional[List[DVCodedText]] = Field(None, minItems=1)
    repeat_period: Optional[DVDuration] = None
    update_method: CodePhrase
    _type: Optional[str] = None


class Observation(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid20] = None
    archetype_node_id: str
    name: Name22
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    language: CodePhrase
    encoding: CodePhrase
    subject: Subject3
    provider: Optional[Provider3] = None
    other_participations: Optional[List[Participation]] = None
    workflow_id: Optional[WorkflowId2] = None
    protocol: Optional[Protocol2] = None
    guideline_id: Optional[GuidelineId2] = None
    data: History = Field(
        ..., description='Data of the observation, in the form of a HISTORY of EVENTs.'
    )
    state: Optional[History] = None
    _type: Optional[str] = None


class XVersionedObject(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    owner_id: OwnerId4
    time_created: DVDateTime
    total_version_count: int
    extract_version_count: int
    revision_history: Optional[RevisionHistory] = None
    versions: Optional[List[OriginalVersion]] = None
    _type: Optional[str] = None


class IsmTransition(RMObject):
    class Config:
        extra = Extra.forbid

    current_state: DVCodedText
    transition: Optional[DVCodedText] = None
    careflow_step: Optional[DVCodedText] = None
    reason: Optional[List[ReasonItem]] = None
    _type: Optional[str] = None


class XVersionedEhrStatus(RMObject):
    class Config:
        extra = Extra.forbid

    uid: HierObjectId
    owner_id: OwnerId5
    time_created: DVDateTime
    total_version_count: int
    extract_version_count: int
    revision_history: Optional[RevisionHistory] = None
    versions: Optional[List[OriginalVersion]] = None
    _type: Optional[str] = None


class Participation(RMObject):
    class Config:
        extra = Extra.forbid

    function: Function1
    time: Optional[DVInterval] = None
    mode: Optional[DVCodedText] = None
    performer: Performer
    _type: Optional[str] = None


class Extract(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid22] = None
    archetype_node_id: str
    name: Name24
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    request_id: Optional[HierObjectId] = None
    time_created: DVDateTime
    system_id: HierObjectId
    sequence_nr: int
    specification: Optional[ExtractSpec] = None
    chapters: Optional[List[Chapter]] = None
    participations: Optional[List[ExtractParticipation]] = None
    _type: Optional[str] = None


class GenericContentItem(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid24] = None
    archetype_node_id: str
    name: Name26
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    is_primary: bool
    is_changed: Optional[bool] = None
    is_masked: Optional[bool] = None
    item: Optional[Item6] = None
    item_type: Optional[DVCodedText] = None
    item_type_version: Optional[str] = None
    author: Optional[str] = None
    creation_time: Optional[datetime] = None
    authoriser: Optional[str] = None
    authorisation_time: Optional[datetime] = None
    item_status: Optional[DVCodedText] = None
    version_id: Optional[str] = None
    version_set_id: Optional[str] = None
    system_id: Optional[str] = None
    other_details: Optional[List[str]] = None
    _type: Optional[str] = None


class IntervalEvent(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid26] = None
    archetype_node_id: str
    name: Name28
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    time: DVDateTime
    state: Optional[State1] = None
    data: Data2
    width: DVDuration
    sample_count: Optional[int] = None
    math_function: DVCodedText
    _type: Optional[str] = None


class Attestation(RMObject):
    class Config:
        extra = Extra.forbid

    system_id: str
    time_committed: DVDateTime
    change_type: DVCodedText
    description: Optional[Description1] = None
    committer: Committer1
    attested_view: Optional[DVMultimedia] = None
    proof: Optional[str] = None
    items: Optional[List[DVEhrUri]] = None
    reason: Reason
    is_pending: bool
    _type: Optional[str] = None


class DVCodedText(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    hyperlink: Optional[Hyperlink] = None
    language: Optional[CodePhrase] = None
    encoding: Optional[CodePhrase] = None
    formatting: Optional[str] = None
    mappings: Optional[List[TermMapping]] = Field(None, minItems=1)
    defining_code: CodePhrase
    _type: Optional[str] = None


class DVScale(RMObject):
    class Config:
        extra = Extra.forbid

    normal_status: Optional[CodePhrase] = None
    normal_range: Optional[DVInterval] = None
    other_reference_ranges: Optional[List[ReferenceRange]] = Field(None, minItems=1)
    value: float
    symbol: DVCodedText
    _type: Optional[str] = None


class AdminEntry(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid30] = None
    archetype_node_id: str
    name: Name32
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    language: CodePhrase
    encoding: CodePhrase
    subject: Subject4
    provider: Optional[Provider4] = None
    other_participations: Optional[List[Participation]] = None
    workflow_id: Optional[WorkflowId3] = None
    data: Data3
    _type: Optional[str] = None


class Composition1(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid32] = None
    archetype_node_id: str
    name: Name34
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    language: CodePhrase
    territory: CodePhrase
    category: DVCodedText
    composer: Composer
    context: Optional[EventContext] = None
    content: Optional[List[ContentItem]] = Field(None, minItems=1)
    _type: Optional[str] = None


class ImportedVersion(RMObject):
    class Config:
        extra = Extra.forbid

    contribution: Contribution3
    commit_audit: CommitAudit1
    signature: Optional[str] = None
    item: OriginalVersion
    _type: Optional[str] = None


class DVText(RMObject):
    class Config:
        extra = Extra.forbid

    value: str
    hyperlink: Optional[Hyperlink1] = None
    language: Optional[CodePhrase] = None
    encoding: Optional[CodePhrase] = None
    formatting: Optional[str] = None
    mappings: Optional[List[TermMapping]] = Field(None, minItems=1)
    _type: Optional[str] = None


class Action(RMObject):
    class Config:
        extra = Extra.forbid

    uid: Optional[Uid35] = None
    archetype_node_id: str
    name: Name37
    archetype_details: Optional[Archetyped] = None
    feeder_audit: Optional[FeederAudit] = None
    links: Optional[List[Link]] = Field(None, minItems=1)
    language: CodePhrase
    encoding: CodePhrase
    subject: Subject5
    provider: Optional[Provider5] = None
    other_participations: Optional[List[Participation]] = None
    workflow_id: Optional[WorkflowId4] = None
    protocol: Optional[Protocol3] = None
    guideline_id: Optional[GuidelineId3] = None
    time: DVDateTime
    description: Description2
    ism_transition: IsmTransition
    instruction_details: Optional[InstructionDetails] = None
    _type: Optional[str] = None


DVMultimedia.update_forward_refs()
Folder1.update_forward_refs()
AuditDetails.update_forward_refs()
ExtractParticipation.update_forward_refs()
PartyRelated.update_forward_refs()
Instruction.update_forward_refs()
Evaluation.update_forward_refs()
OriginalVersion.update_forward_refs()
ExtractRequest.update_forward_refs()
EventContext.update_forward_refs()
ItemSingle.update_forward_refs()
DVOrdinal.update_forward_refs()
ExtractActionRequest.update_forward_refs()
Element.update_forward_refs()
ExtractSpec.update_forward_refs()
DVState.update_forward_refs()
TermMapping.update_forward_refs()
ExtractUpdateSpec.update_forward_refs()
Observation.update_forward_refs()
IsmTransition.update_forward_refs()
Participation.update_forward_refs()
GenericContentItem.update_forward_refs()
IntervalEvent.update_forward_refs()
Attestation.update_forward_refs()
